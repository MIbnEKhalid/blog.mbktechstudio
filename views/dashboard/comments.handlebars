{{#section 'styles'}}
<title>Dashboard - Comments</title>
<style>
.comment-stats {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1.5rem;
    margin-bottom: 2rem;
}

.comment-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
    gap: 1rem;
}

.status-badge {
    padding: 0.25rem 0.75rem;
    border-radius: 20px;
    font-size: 0.75rem;
    font-weight: 500;
}

.status-approved {
    background-color: rgba(76, 175, 80, 0.1);
    color: var(--success-color);
}

.status-pending {
    background-color: rgba(255, 152, 0, 0.1);
    color: var(--warning-color);
}

.comment-content {
    max-width: 300px;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.search-box {
    position: relative;
    margin-bottom: 1.5rem;
}

.search-input {
    width: 100%;
    padding: 0.75rem 1rem 0.75rem 2.5rem;
    border: 1px solid #ddd;
    border-radius: var(--border-radius);
    font-size: 0.875rem;
}

.search-icon {
    position: absolute;
    left: 1rem;
    top: 50%;
    transform: translateY(-50%);
    color: #666;
}

.btn-warning {
    background-color: var(--warning-color);
    color: white;
}

.btn-warning:hover {
    opacity: 0.9;
}

.btn-success {
    background-color: var(--success-color);
    color: white;
}

.btn-success:hover {
    opacity: 0.9;
}

/* Mobile Responsive */
@media (max-width: 1024px) {
    .comment-stats {
        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    }
}

@media (max-width: 768px) {
    .comment-stats {
        grid-template-columns: repeat(2, 1fr);
        gap: 1rem;
    }

    .comment-header {
        flex-direction: column;
        align-items: stretch;
    }

    .comment-header .btn {
        width: 100%;
    }

    .search-input {
        font-size: 16px;
        padding: 0.75rem 1rem 0.75rem 2.25rem;
    }

    .filter-options {
        flex-direction: column !important;
        padding: 0.75rem !important;
        gap: 0.75rem !important;
    }

    .filter-group {
        flex-direction: column !important;
        align-items: stretch !important;
        gap: 0.25rem !important;
    }

    .filter-group label {
        font-size: 0.8rem !important;
    }

    .form-select {
        width: 100% !important;
        font-size: 0.85rem !important;
    }

    .table {
        font-size: 0.85rem;
    }

    .table thead th {
        padding: 0.75rem 0.5rem;
        font-size: 0.7rem;
    }

    .table tbody td {
        padding: 0.75rem 0.5rem;
    }

    .comment-content {
        max-width: 150px;
        font-size: 0.85rem;
    }

    .btn {
        padding: 0.5rem 0.75rem;
        font-size: 0.85rem;
    }

    .btn-sm {
        padding: 0.25rem 0.4rem;
        font-size: 0.75rem;
    }

    .status-badge {
        padding: 0.2rem 0.5rem;
        font-size: 0.7rem;
    }
}

@media (max-width: 480px) {
    .comment-stats {
        grid-template-columns: 1fr;
        gap: 0.75rem;
    }

    .comment-header {
        gap: 0.5rem;
    }

    .comment-header .btn {
        font-size: 0.7rem;
        padding: 0.4rem 0.6rem;
    }

    .search-input {
        font-size: 16px;
    }

    .filter-options {
        padding: 0.5rem !important;
        gap: 0.5rem !important;
    }

    .table {
        font-size: 0.75rem;
    }

    .table thead th {
        padding: 0.5rem 0.25rem;
        font-size: 0.65rem;
    }

    .table tbody td {
        padding: 0.5rem 0.25rem;
    }

    .comment-content {
        max-width: 100px;
        font-size: 0.7rem;
    }

    .btn {
        font-size: 0.65rem;
        padding: 0.35rem 0.5rem;
    }

    .status-badge {
        padding: 0.15rem 0.35rem;
        font-size: 0.6rem;
    }
}
</style>
{{/section}}

<div class="content-header">
    <h1 class="content-title">Comments Management</h1>
</div>

<div class="comment-stats">
    <div class="stat-card">
        <div class="stat-icon" style="background: rgba(33, 150, 243, 0.1); color: var(--info-color);">
            <i class="fas fa-comments"></i>
        </div>
        <div class="stat-info">
            <h3>Total Comments</h3>
            <div class="value">{{totalComments}}</div>
        </div>
    </div>
    <div class="stat-card">
        <div class="stat-icon" style="background: rgba(76, 175, 80, 0.1); color: var(--success-color);">
            <i class="fas fa-check-circle"></i>
        </div>
        <div class="stat-info">
            <h3>Approved</h3>
            <div class="value">{{approvedComments}}</div>
        </div>
    </div>
    <div class="stat-card">
        <div class="stat-icon" style="background: rgba(255, 152, 0, 0.1); color: var(--warning-color);">
            <i class="fas fa-clock"></i>
        </div>
        <div class="stat-info">
            <h3>Pending</h3>
            <div class="value">{{pendingComments}}</div>
        </div>
    </div>
</div>

<div class="card">
    <div class="filters-container">
        <div class="search-box">
            <i class="fas fa-search search-icon"></i>
            <input type="text" class="search-input" placeholder="Search comments..." id="searchComments">
        </div>
        
        <div class="filter-options">
            <div class="filter-group">
                <label>Status:</label>
                <select id="statusFilter" class="form-select">
                    <option value="all">All Status</option>
                    <option value="approved">Approved</option>
                    <option value="pending">Pending</option>
                </select>
            </div>
            <div class="filter-group">
                <label>Sort by:</label>
                <select id="sortFilter" class="form-select">
                    <option value="date-desc">Date (Newest)</option>
                    <option value="date-asc">Date (Oldest)</option>
                    <option value="author">Author Name</option>
                    <option value="post">Post Title</option>
                </select>
            </div>
        </div>
    </div>

    <div class="table-container">
        {{#if comments}}
            <table class="table">
                <thead>
                    <tr>
                        <th>Comment Details</th>
                        <th>Author</th>
                        <th>Post</th>
                        <th>Date</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    {{#each comments}}
                    <tr>
                        <td>
                            <div class="comment-content">{{content}}</div>
                        </td>
                        <td>
                            <div style="font-weight: 500;">{{UserName}}</div>
                        </td>
                        <td>
                            <a href="/post/{{post_slug}}" target="_blank" style="color: var(--primary-color); text-decoration: none;">
                                {{post_title}}
                            </a>
                        </td>
                        <td>{{formatDate created_at}}</td>
                        <td>
                            <span class="status-badge {{#if is_approved}}status-approved{{else}}status-pending{{/if}}">
                                {{#if is_approved}}Approved{{else}}Pending{{/if}}
                            </span>
                        </td>
                        <td>
                            <div class="action-buttons">
                                {{#if is_approved}}
                                    <button onclick="moderateComment({{id}}, 'unapprove')" class="btn btn-sm btn-warning" title="Unapprove">
                                        <i class="fas fa-times"></i>
                                    </button>
                                {{else}}
                                    <button onclick="moderateComment({{id}}, 'approve')" class="btn btn-sm btn-success" title="Approve">
                                        <i class="fas fa-check"></i>
                                    </button>
                                {{/if}}
                                <button onclick="deleteComment({{id}})" class="btn btn-sm btn-danger" title="Delete">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </td>
                    </tr>
                    {{/each}}
                </tbody>
            </table>
        {{else}}
            <div style="text-align: center; padding: 3rem;">
                <div style="margin-bottom: 1rem;">
                    <i class="fas fa-comments" style="font-size: 3rem; color: #ddd;"></i>
                </div>
                <h3 style="color: #666; margin-bottom: 1rem;">No comments found</h3>
                <p style="color: #888;">Comments will appear here once users start engaging with your posts.</p>
            </div>
        {{/if}}
    </div>
</div>

<script>
// Filter and sort functionality
function filterAndSortComments() {
    const searchText = document.getElementById('searchComments').value.toLowerCase();
    const statusFilter = document.getElementById('statusFilter').value;
    const sortFilter = document.getElementById('sortFilter').value;
    const tbody = document.querySelector('tbody');
    const rows = Array.from(tbody.querySelectorAll('tr'));
    
    // Apply filters
    rows.forEach(row => {
        const content = row.querySelector('.comment-content').textContent.toLowerCase();
        const author = row.querySelector('td:nth-child(2)').textContent.toLowerCase();
        const post = row.querySelector('td:nth-child(3)').textContent.toLowerCase();
        const status = row.querySelector('.status-badge').textContent.toLowerCase();
        
        const matchesSearch = content.includes(searchText) || author.includes(searchText) || post.includes(searchText);
        const matchesStatus = statusFilter === 'all' || status === statusFilter.toLowerCase();
        
        row.style.display = matchesSearch && matchesStatus ? '' : 'none';
    });
    
    // Sort visible rows
    const visibleRows = rows.filter(row => row.style.display !== 'none');
    visibleRows.sort((a, b) => {
        switch (sortFilter) {
            case 'date-desc':
            case 'date-asc': {
                const aDate = new Date(a.querySelector('td:nth-child(4)').textContent);
                const bDate = new Date(b.querySelector('td:nth-child(4)').textContent);
                return sortFilter === 'date-desc' ? bDate - aDate : aDate - bDate;
            }
            case 'author': {
                const aAuthor = a.querySelector('td:nth-child(2)').textContent.toLowerCase();
                const bAuthor = b.querySelector('td:nth-child(2)').textContent.toLowerCase();
                return aAuthor.localeCompare(bAuthor);
            }
            case 'post': {
                const aPost = a.querySelector('td:nth-child(3)').textContent.toLowerCase();
                const bPost = b.querySelector('td:nth-child(3)').textContent.toLowerCase();
                return aPost.localeCompare(bPost);
            }
            default:
                return 0;
        }
    });
    
    // Update the DOM
    visibleRows.forEach(row => tbody.appendChild(row));
}

// Add event listeners for all filter controls
document.getElementById('searchComments').addEventListener('input', filterAndSortComments);
document.getElementById('statusFilter').addEventListener('change', filterAndSortComments);
document.getElementById('sortFilter').addEventListener('change', filterAndSortComments);

async function moderateComment(id, action) {
    try {
        const response = await fetch(`/dashboard/api/comments/${id}/${action}`, {
            method: 'PUT'
        });

        if (response.ok) {
            window.location.reload();
        } else {
            const error = await response.json();
            alert(error.error || 'Failed to moderate comment');
        }
    } catch (err) {
        console.error(err);
        alert('An error occurred while moderating the comment');
    }
}

async function deleteComment(id) {
    if (!confirm('Are you sure you want to delete this comment? This action cannot be undone.')) {
        return;
    }

    try {
        const response = await fetch(`/dashboard/api/comments/${id}`, {
            method: 'DELETE'
        });

        if (response.ok) {
            window.location.reload();
        } else {
            const error = await response.json();
            alert(error.error || 'Failed to delete comment');
        }
    } catch (err) {
        console.error(err);
        alert('An error occurred while deleting the comment');
    }
}
</script>
</div>
